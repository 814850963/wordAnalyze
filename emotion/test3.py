import re
import json
import requests
import pandas as pd
from xpinyin import Pinyin
author=[]
date = []
content = []
score=[]
global index
index=1
global city
city='北京'
global hotelId
hotelId='3452'
# url = "https://touch.piao.qunar.com/touch/queryCommentsAndTravelTips.json?type=mp&pageSize=10&fromType=SIGHT&pageNum=" + str(i) + "&sightId=5759&tagType=0"
# url = "http://touch.qunar.com/api/hotel/hoteldetail/comment?seq=beijing_city_20699"
# url = "http://touch.qunar.com/api/hotel/hoteldetail/comment?seq=beijing_city_37248"
# url = "http://touch.qunar.com/api/hotel/hoteldetail/comment?seq=beijing_city_15423&commentType=0&commentPage=3"

global url
url = ""
def crawlFunction(index):
    global url
    if index == 1:
        # url="http://touch.qunar.com/api/hotel/hoteldetail/comment?seq=beijing_city_37248"
        url = "http://touch.qunar.com/api/hotel/hoteldetail/comment?seq=" + city + "_city_" + hotelId
        crawExe(1)
    if index > 1:
        crawlFunction(1)
        for i in range(2,index+1):
            url = "http://touch.qunar.com/api/hotel/hoteldetail/comment?seq=" + city + "_city_" + hotelId + "&commentType=0&commentPage="+str(i)
            crawExe(i)
def crawExe(index):
    # for i in range(1, index+1):÷
        try:
            print("正在抓取第" + str(index) + "页")
            print(url)
            html = requests.get(url).text
            # print(html)
            html = json.loads(html)
            data = html['data']
            # print(data)
            commentData = data['commentData']
            # print(commentData)
            comments = commentData['comments']
            allTotal = commentData['allTotal']
            goodTotal = commentData['goodTotal']
            mediumTotal = commentData['mediumTotal']
            badTotal = commentData['badTotal']
            avgscore = commentData['score']
            hotelName = commentData['hotelName']
            # print(allTotal)
            # print(goodTotal)
            # print(mediumTotal)
            # print(badTotal)
            # print(avgscore)
            # print(hotelName)
            for each in comments:
                # print(each)
                author1=each['author']
                date1=each['date']
                content1 = each['content']
                score1=each['score']
                # str = content1
                # strinfo = re.compile('&#x20')
                # str2 = strinfo.sub('', content1)
                # strinfo = re.compile('&#x0A')
                # str2 = strinfo.sub('', content1)
                # content1 = content1.replace('&#x20', '')
                # content1 = content1.replace('&#x0A', '')
                # content1 = content1.replace(';;', '。')
                # content1 = content1.replace(';', ',')

                # str.replace('\\&#x20','q')
                # print(content1)
                author.append(author1)
                date.append(date1)
                score.append(score1)
                content.append(content1)
        except:
            pass
#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.9.3 on Sun May 26 13:18:49 2019
#

import wx

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class MyFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((400, 299))
        self.notebook_1 = wx.Notebook(self, wx.ID_ANY)
        self.notebook_1_pane_2 = wx.Panel(self.notebook_1, wx.ID_ANY)
        self.text_ctrl_1 = wx.TextCtrl(self.notebook_1_pane_2, wx.ID_ANY, u"北京")
        self.text_ctrl_2 = wx.TextCtrl(self.notebook_1_pane_2, wx.ID_ANY, "3452")
        self.text_ctrl_3 = wx.TextCtrl(self.notebook_1_pane_2, wx.ID_ANY, "2")
        self.button_1 = wx.Button(self.notebook_1_pane_2, wx.ID_ANY, u"爬取")

        self.button_1.Bind(wx.EVT_BUTTON, self.ExecuteCrawl)

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def ExecuteCrawl(self,e):
        global city
        global hotelId
        global index
        city=self.text_ctrl_1.GetLineText(0)
        hotelId=self.text_ctrl_2.GetLineText(0)
        index=self.text_ctrl_3.GetLineText(0)
        p = Pinyin()
        city = p.get_pinyin(city, '')
        crawlFunction(2)
        result = pd.DataFrame({'author': author, 'content': content, 'date': date, 'score': score})
        result.to_csv('./qunaer.csv', index=True)
        print(author)
        print(date)
        print(score)
        print(content)

    def __set_properties(self):
        # begin wxGlade: MyFrame.__set_properties
        self.SetTitle("frame")
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        sizer_5 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_4 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_3 = wx.BoxSizer(wx.HORIZONTAL)
        label_1 = wx.StaticText(self.notebook_1_pane_2, wx.ID_ANY, u"城市名称：")
        label_1.SetFont(wx.Font(34, wx.FONTFAMILY_DEFAULT, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL, 0, ""))
        sizer_3.Add(label_1, 1, wx.ALIGN_CENTER | wx.ALL, 0)
        sizer_3.Add(self.text_ctrl_1, 0, wx.ALL, 18)
        sizer_2.Add(sizer_3, 1, wx.EXPAND, 0)
        label_2 = wx.StaticText(self.notebook_1_pane_2, wx.ID_ANY, u"酒店id：")
        label_2.SetFont(wx.Font(34, wx.FONTFAMILY_DEFAULT, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL, 0, ""))
        sizer_4.Add(label_2, 1, wx.ALIGN_CENTER | wx.ALL, 0)
        sizer_4.Add(self.text_ctrl_2, 0, wx.ALL, 18)
        sizer_2.Add(sizer_4, 1, wx.EXPAND, 0)
        label_3 = wx.StaticText(self.notebook_1_pane_2, wx.ID_ANY, u"爬取页数：")
        label_3.SetFont(wx.Font(34, wx.FONTFAMILY_DEFAULT, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL, 0, ""))
        sizer_5.Add(label_3, 1, wx.ALIGN_CENTER | wx.ALL, 0)
        sizer_5.Add(self.text_ctrl_3, 0, wx.ALL, 18)
        sizer_2.Add(sizer_5, 1, wx.EXPAND, 0)
        sizer_2.Add(self.button_1, 0, wx.ALIGN_CENTER, 0)
        self.notebook_1_pane_2.SetSizer(sizer_2)
        self.notebook_1.AddPage(self.notebook_1_pane_2, u"去哪儿网酒店信息爬取工具")
        sizer_1.Add(self.notebook_1, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        self.Layout()
        # end wxGlade

# end of class MyFrame

class MyApp(wx.App):
    def OnInit(self):
        self.frame = MyFrame(None, wx.ID_ANY, "")
        self.SetTopWindow(self.frame)
        self.frame.Show()
        return True

# end of class MyApp

if __name__ == "__main__":
    app = MyApp(0)
    app.MainLoop()







# https://touch.piao.qunar.com/touch/queryCommentsAndTravelTips.json?type=mp&pageSize=10&fromType=SIGHT&pageNum=1&sightId=5759&tagType=0